{"version":3,"file":"static/js/466.279d7b7e.chunk.js","mappings":"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","sources":["components/ContactFormRTK/ContactForm.styled.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactFormRTK/ContactForm.module.css?0877","components/ContactFormRTK/ContactForm.jsx","components/ContactListRTK/ContactList.styled.js","components/ContactItemRTK/ContactItem.styled.js","components/ContactItemRTK/ContactItem.jsx","components/ContactListRTK/ContactList.jsx","components/Phonebook(RTK_query)/Phonebook.styled.js","components/ContactCardRTK/ContactCard.styled.js","components/ContactCardRTK/ContactCard.jsx","components/Phonebook(RTK_query)/Phonebook.jsx","pages/PhonebookPage_RTK/PhonebookPage_RTK.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { TextButton } from 'components/TextButton';\n\nexport const FormButton = styled(TextButton)`\n  margin: 30px auto 0;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_form_input\":\"ContactForm_contact_form_input__XewXY\",\"contact_form_group\":\"ContactForm_contact_form_group__ZrvK1\",\"contact_form_inner_group\":\"ContactForm_contact_form_inner_group__KxDHv\",\"contact_form_label\":\"ContactForm_contact_form_label__2DlR4\",\"contact_form_error\":\"ContactForm_contact_form_error__6IHK+\"};","import { Formik, Form } from 'formik';\nimport { object, string } from 'yup';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApiRTK';\n\nimport { TextInput } from 'components/TextInput';\nimport { FormButton } from './ContactForm.styled';\nimport { Notification } from 'components/Notification';\nimport css from './ContactForm.module.css';\n\nconst STATUS = {\n  success: 'success',\n  error: 'error',\n};\n\nconst nameExpression = RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nexport const ContactForm = ({ initialValues, handleContactChange }) => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const contactSchema = object({\n    name: string()\n      .required()\n      .min(2, 'Name must be at least 2 characters')\n      .matches(\n        nameExpression,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .test(\n        'Name was entered successfully',\n        'This name is already taken',\n        value => {\n          if (initialValues) {\n            return !findContactByNameAndId(value);\n          }\n          return !findContactByName(value);\n        }\n      ),\n    number: string()\n      .required()\n      .matches(\n        /^\\+?\\d{1,4}[-.\\s]?\\d{1,3}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .min(6, 'Number must be at least 6 characters')\n      .test(\n        'Number was entered successfully',\n        'This number is already taken',\n        value => {\n          if (initialValues) {\n            return !findContactByNumberAndId(value);\n          }\n          return !findContactByNumber(value);\n        }\n      ),\n  });\n\n  const handleFormSubmit = values => {\n    handleContactChange(values);\n  };\n\n  const findContactByName = nameValue => {\n    return contacts?.find(({ name }) => name === nameValue);\n  };\n\n  const findContactByNumber = numberValue =>\n    contacts?.find(({ number }) => numberValue === number);\n\n  const findContactByNameAndId = nameValue => {\n    return contacts?.find(contact => {\n      return nameValue === contact.name && contact.id !== initialValues.id;\n    });\n  };\n\n  const findContactByNumberAndId = numberValue => {\n    return contacts?.find(contact => {\n      return numberValue === contact.number && contact.id !== initialValues.id;\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues ?? { name: '', number: '' }}\n      validationSchema={contactSchema}\n      onSubmit={handleFormSubmit}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form>\n          <label className={css.contact_form_group}>\n            <span className={css.contact_form_inner_group}>\n              <span className={css.contact_form_label}>Name</span>\n              <TextInput\n                className={css.contact_form_input}\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n              />\n            </span>\n            {!touched.name && <Notification>Enter a name</Notification>}\n            {touched.name && !errors.name && (\n              <Notification status={STATUS.success}>\n                Name was entered successfully\n              </Notification>\n            )}\n            {touched.name && errors.name && (\n              <Notification status={STATUS.error}>{errors.name}</Notification>\n            )}\n          </label>\n          <label className={css.contact_form_group}>\n            <span className={css.contact_form_inner_group}>\n              <span className={css.contact_form_label}>Number</span>\n              <TextInput\n                className={css.contact_form_input}\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.number}\n              />\n            </span>\n            {!touched.number && <Notification>Enter a number</Notification>}\n            {touched.number && !errors.number && (\n              <Notification status={STATUS.success}>\n                Number was entered successfully\n              </Notification>\n            )}\n            {touched.number && errors.number && (\n              <Notification status={STATUS.error}>{errors.number}</Notification>\n            )}\n          </label>\n          <FormButton text=\"Confirm\" type=\"submit\"></FormButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  flex-basis: 70%;\n  padding: 11px 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  border: 3px solid rgba(154, 154, 154, 0.09);\n  border-top: 0;\n`;\n\nexport const StyledItem = styled.li`\n  position: relative;\n  border-radius: 10px;\n  border: 0.5px solid rgba(137, 137, 137, 0.43);\n  cursor: pointer;\n\n  ${({ generateLetter }) => {\n    if (generateLetter) {\n      return `\n        margin-top: 20px;\n\n        &::before {\n          content: '${generateLetter}';\n          position: absolute;\n          top: -35px;\n              padding: 3px 0px 3px 25px;\n    font-size: 18px;\n    right: -21px;\n    font-weight: 500;\n          left: -21px;\n          background-color: aqua;\n        }\n\n        &:first-child{\n          margin-top: 22.6px;\n        }\n      `;\n    }\n  }}\n`;\n\nexport const MessageWrapper = styled.div`\n  flex-basis: 70%;\n  padding: 11px 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid rgba(154, 154, 154, 0.09);\n  border-top: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  padding: 6px 19px 6px 9px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n`;\n\nexport const TextField = styled.p`\n  width: 100%;\n  max-width: 200px;\n  word-break: break-all;\n`;\n","import { Card, TextField } from './ContactItem.styled';\nimport contactImage from 'images/itemImage.jpg';\n\nexport const ContactItem = ({ name, number }) => {\n  return (\n    <Card>\n      <span>\n        <img src={contactImage} alt=\"Contact avatar\" />\n      </span>\n      <TextField>{name}</TextField>\n      <TextField>{number}</TextField>\n    </Card>\n  );\n};\n","import { useGetContactsQuery } from 'redux/contacts/contactsApiRTK';\nimport { useSelector } from 'react-redux';\nimport { selectFilterByOption, selectFilterByQuery } from 'redux/selectors';\nimport { MessageWrapper, StyledItem, StyledList } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItemRTK';\nimport { Message } from 'components/Message';\n\nconst findUsedLetters = data => {\n  const arrOfLetters = [];\n\n  if (!data) return null;\n\n  for (const item of data) {\n    const letter = item.name.toUpperCase()[0];\n    if (arrOfLetters.includes(letter)) {\n      continue;\n    }\n\n    arrOfLetters.push(letter);\n  }\n\n  return arrOfLetters.map(item => ({ letter: item, isUsed: false }));\n};\n\nexport const ContactList = ({ chooseContact }) => {\n  const { data: contacts, isFetching } = useGetContactsQuery(undefined, {\n    refetchOnMountOrArgChange: true,\n  });\n  const option = useSelector(selectFilterByOption);\n  const query = useSelector(selectFilterByQuery);\n  const usedLetters = findUsedLetters(contacts);\n\n  const getFilteredContacts = data => {\n    let filteredContacts = [...data];\n\n    switch (option) {\n      case 'without': {\n        break;\n      }\n      case 'ascending': {\n        filteredContacts.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      }\n      case 'descending': {\n        filteredContacts.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      }\n      default:\n        break;\n    }\n\n    return filteredContacts.filter(({ name }) =>\n      name.toLowerCase().includes(query)\n    );\n  };\n\n  const generateLetter = item => {\n    if (option !== 'ascending' && option !== 'descending') {\n      return null;\n    }\n\n    const letterToGenerate = item.name.toUpperCase()[0];\n    const letterOptions = usedLetters.find(i => i.letter === letterToGenerate);\n\n    if (letterOptions.isUsed) return null;\n\n    letterOptions.isUsed = true;\n    return letterToGenerate;\n  };\n\n  const filteredContacts = contacts && getFilteredContacts(contacts);\n\n  return (\n    <>\n      {filteredContacts?.length ? (\n        <StyledList>\n          {filteredContacts.map(item => (\n            <StyledItem\n              generateLetter={generateLetter(item)}\n              onClick={() => chooseContact(item)}\n              key={item.id}\n            >\n              <ContactItem {...item} />\n            </StyledItem>\n          ))}\n        </StyledList>\n      ) : (\n        !isFetching && (\n          <MessageWrapper>\n            <Message text=\"There are no contacts here\" />\n          </MessageWrapper>\n        )\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  min-height: 700px;\n`;\n","import { Button } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const OuterWrapper = styled.div`\n  flex-grow: 1;\n  border-right: 3px solid rgba(154, 154, 154, 0.09);\n  border-bottom: 3px solid rgba(154, 154, 154, 0.09);\n`;\n\nexport const InnerWrapper = styled.div`\n  position: relative;\n  width: 280px;\n  margin: 0 auto;\n`;\n\nexport const ContentWrapper = styled.div`\n  position: fixed;\n  top: 20%;\n  width: 280px;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 70px 0 30px 0;\n  text-align: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100px;\n  margin: 0 auto 5px;\n`;\n\nexport const StyledDelButton = styled(Button)`\n  &.MuiButtonBase-root {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n`;\n","import { useState } from 'react';\nimport { MdDelete } from 'react-icons/md';\nimport { FiEdit } from 'react-icons/fi';\n\nimport { DeleteModal } from 'components/DeleteModal';\nimport { Spinner } from 'components/Spinner';\nimport { ContactForm } from 'components/ContactFormRTK';\nimport { FormModal } from 'components/FormModal';\nimport { ContactCardOptions } from 'components/ContactCardOptions';\nimport {\n  ContentWrapper,\n  ImageWrapper,\n  InfoWrapper,\n  InnerWrapper,\n  OuterWrapper,\n  StyledDelButton,\n} from './ContactCard.styled';\nimport userImage from 'images/itemImage.jpg';\n\nimport { errorNotify, successNotify } from 'utils';\nimport {\n  useEditContactMutation,\n  useRemoveContactMutation,\n} from 'redux/contacts/contactsApiRTK';\n\nexport const ContactCard = ({ data: { name, number, id }, chooseContact }) => {\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n  const [isEditModalShown, setIsEditModalShown] = useState(false);\n\n  const [editContact, editContactData] = useEditContactMutation();\n  const [removeContact, removeContactData] = useRemoveContactMutation();\n\n  const closeModal = () => {\n    setIsDeleteModalShown(false);\n    setIsEditModalShown(false);\n  };\n\n  const handleDeleteContact = async () => {\n    const response = await removeContact(id);\n    const isSuccess = !response.error;\n\n    if (isSuccess) {\n      successNotify(`Contact \"${name}\" was successfully deleted`);\n      chooseContact(null);\n    } else {\n      errorNotify('Something went wrong with deleting this contact');\n    }\n\n    closeModal();\n  };\n\n  const handleEditContact = async data => {\n    if (name === data.name && number === data.number) {\n      closeModal();\n      return;\n    }\n\n    const response = await editContact(data);\n    const isSuccess = !response.error;\n\n    if (isSuccess) {\n      successNotify(`Contact \"${name}\" was successfully edited`);\n      chooseContact(response.data);\n    } else {\n      errorNotify('Something went wrong with editing this contact');\n    }\n\n    closeModal();\n  };\n\n  return (\n    <>\n      <OuterWrapper>\n        <InnerWrapper>\n          <ContentWrapper>\n            <InfoWrapper>\n              <ImageWrapper>\n                <img src={userImage} alt=\"Contact avatar\" width={100} />\n              </ImageWrapper>\n              <h3>{name}</h3>\n            </InfoWrapper>\n            <ContactCardOptions name={name} number={number} />\n            <StyledDelButton\n              fullWidth\n              variant=\"contained\"\n              onClick={() => setIsEditModalShown(true)}\n            >\n              Edit\n              {editContactData.isLoading ? (\n                <Spinner size={19} />\n              ) : (\n                <FiEdit size={23} />\n              )}\n            </StyledDelButton>\n            <StyledDelButton\n              fullWidth\n              variant=\"contained\"\n              onClick={() => setIsDeleteModalShown(true)}\n            >\n              Delete\n              {removeContactData.isLoading ? (\n                <Spinner size={19} />\n              ) : (\n                <MdDelete size={23} />\n              )}\n            </StyledDelButton>\n          </ContentWrapper>\n        </InnerWrapper>\n      </OuterWrapper>\n      {isEditModalShown && (\n        <FormModal onClose={closeModal}>\n          <ContactForm\n            handleContactChange={handleEditContact}\n            initialValues={{ name, id, number }}\n          />\n        </FormModal>\n      )}\n      {isDeleteModalShown && (\n        <DeleteModal\n          agreeFunc={handleDeleteContact}\n          onClose={closeModal}\n          toDeleteName={name}\n        />\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsApiRTK';\nimport { errorNotify, successNotify } from 'utils';\n\nimport { ContactForm } from 'components/ContactFormRTK';\nimport { ContactList } from 'components/ContactListRTK';\nimport { Controlls } from 'components/Controlls';\nimport { FormModal } from 'components/FormModal';\nimport { Message } from 'components/Message';\nimport { Modal } from 'components/Modal';\nimport { Spinner } from 'components/Spinner';\nimport { ContentWrapper } from './Phonebook.styled';\nimport { ContactCard } from 'components/ContactCardRTK';\n\nexport const Phonebook = () => {\n  const [addContact] = useAddContactMutation();\n  const { isLoading, isError: isErrorInGetting } = useGetContactsQuery();\n\n  const [contactCardData, setContactCardData] = useState(null);\n  const [isModalShown, setIsModalShown] = useState(false);\n\n  const handleAddContact = async data => {\n    const response = await addContact(data);\n    const isSuccess = !response.error;\n\n    isSuccess\n      ? successNotify(\n          `New contact \"${response.data.name}\" was successfully added`\n        )\n      : errorNotify('Something went wrong with adding this contact');\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setIsModalShown(state => !state);\n  };\n\n  if (isErrorInGetting) {\n    return <Message text={'Something went wrong, try to use it later'} />;\n  }\n\n  return (\n    <div style={{ flexGrow: 1 }}>\n      <Controlls toggleModal={toggleModal} />\n      {isModalShown && (\n        <FormModal onClose={toggleModal}>\n          <ContactForm handleContactChange={handleAddContact} />\n        </FormModal>\n      )}\n      {isLoading && (\n        <Modal>\n          <Spinner position=\"center\" />\n        </Modal>\n      )}\n      <ContentWrapper>\n        <ContactList chooseContact={setContactCardData} />\n        {contactCardData && (\n          <ContactCard\n            chooseContact={setContactCardData}\n            data={contactCardData}\n          />\n        )}\n      </ContentWrapper>\n    </div>\n  );\n};\n","import { Phonebook } from 'components/Phonebook(RTK_query)';\nimport { Container } from 'components/Container.styled';\nimport { UserCard } from 'components/UserCard';\nimport { Section, Wrapper } from 'pages/PhonebookPage.styled';\n\nconst PhonebookPageRTK = () => {\n  return (\n    <>\n      <Section>\n        <Container>\n          <Wrapper>\n            <UserCard />\n            <Phonebook />\n          </Wrapper>\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default PhonebookPageRTK;\n"],"names":["FormButton","styled","TextButton","STATUS","nameExpression","RegExp","ContactForm","initialValues","handleContactChange","contacts","useGetContactsQuery","data","contactSchema","object","name","string","required","min","matches","test","value","findContactByNameAndId","findContactByName","number","findContactByNumberAndId","findContactByNumber","nameValue","find","numberValue","contact","id","validationSchema","onSubmit","values","errors","touched","handleChange","handleBlur","className","css","TextInput","type","onChange","onBlur","Notification","status","text","StyledList","StyledItem","generateLetter","MessageWrapper","Card","TextField","ContactItem","src","contactImage","alt","ContactList","chooseContact","undefined","refetchOnMountOrArgChange","isFetching","option","useSelector","selectFilterByOption","query","selectFilterByQuery","usedLetters","arrOfLetters","letter","toUpperCase","includes","push","map","item","isUsed","findUsedLetters","letterToGenerate","letterOptions","i","filteredContacts","sort","a","b","localeCompare","filter","toLowerCase","getFilteredContacts","length","onClick","Message","ContentWrapper","OuterWrapper","InnerWrapper","InfoWrapper","ImageWrapper","StyledDelButton","Button","ContactCard","useState","isDeleteModalShown","setIsDeleteModalShown","isEditModalShown","setIsEditModalShown","useEditContactMutation","editContact","editContactData","useRemoveContactMutation","removeContact","removeContactData","closeModal","handleDeleteContact","response","error","successNotify","errorNotify","handleEditContact","userImage","width","ContactCardOptions","fullWidth","variant","isLoading","Spinner","size","FormModal","onClose","DeleteModal","agreeFunc","toDeleteName","Phonebook","useAddContactMutation","addContact","isErrorInGetting","isError","contactCardData","setContactCardData","isModalShown","setIsModalShown","handleAddContact","toggleModal","state","style","flexGrow","Controlls","Modal","position","UserCard"],"sourceRoot":""}